{
  "kind": "collectionType",
  "collectionName": "books",
  "info": {
    "singularName": "book",
    "pluralName": "books",
    "displayName": "book",
    "description": ""
  },
  "options": {
    "draftAndPublish": true
  },
  "pluginOptions": {},
  "attributes": {
    "description": {
      "type": "text",
      "maxLength": 1500,
      "minLength": 50
    },
    "images": {
      "type": "media",
      "multiple": true,
      "required": false,
      "allowedTypes": [
        "images"
      ]
    },
    "favorites": {
      "type": "integer",
      "default": 0
    },
    "bestSelling": {
      "type": "boolean"
    },
    "name": {
      "type": "string",
      "maxLength": 100,
      "minLength": 10
    },
    "status": {
      "type": "enumeration",
      "enum": [
        "IN_STOCK",
        "STOCK_OUT",
        "COMING_SOON",
        "PRE_ORDER"
      ],
      "required": true
    },
    "slug": {
      "type": "uid",
      "targetField": "name"
    },
    "categories": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::category.category",
      "inversedBy": "books"
    },
    "totalPages": {
      "type": "integer",
      "required": true
    },
    "tags": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::tag.tag",
      "inversedBy": "books"
    },
    "authors": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::author.author",
      "inversedBy": "books"
    },
    "publisherId": {
      "type": "relation",
      "relation": "manyToOne",
      "target": "api::publisher.publisher",
      "inversedBy": "books"
    },
    "ratings": {
      "type": "relation",
      "relation": "manyToOne",
      "target": "api::rating.rating",
      "inversedBy": "bookId"
    },
    "publishYear": {
      "type": "date",
      "required": false
    },
    "editions": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::book.book",
      "mappedBy": "book"
    },
    "book": {
      "type": "relation",
      "relation": "manyToOne",
      "target": "api::book.book",
      "inversedBy": "editions"
    },
    "users": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "plugin::users-permissions.user",
      "inversedBy": "favorites"
    },
    "variants": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::variant.variant",
      "mappedBy": "bookId"
    }
  }
}
